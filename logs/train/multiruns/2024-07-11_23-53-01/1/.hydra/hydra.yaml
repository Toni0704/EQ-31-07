hydra:
  run:
    dir: ${paths.log_dir}/${task_name}/runs/${now:%Y-%m-%d}_${now:%H-%M-%S}
  sweep:
    dir: ${paths.log_dir}/${task_name}/multiruns/${now:%Y-%m-%d}_${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 1234
      consider_prior: true
      prior_weight: 1.0
      consider_magic_clip: true
      consider_endpoints: false
      n_startup_trials: 10
      n_ei_candidates: 24
      multivariate: false
      warn_independent_sampling: true
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    direction: maximize
    storage: null
    study_name: null
    n_trials: 20
    n_jobs: 2
    search_space: null
    params:
      model.optimizer.lr: choice(0.001, 0.002)
      model.optimizer.weight_decay: choice(0, 0.001)
      model.net.d_model: choice(64, 128)
      model.net.dim_feedforward: choice(64, 128, 256)
      model.net.mlp_dim: choice(64, 128)
      model.net.nhead: choice(2, 4)
      model.net.nlayers: choice(2, 3, 4)
      model.net.dropout: choice(0, 0.2, 0.4)
    custom_search_space: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(purple)sHYDRA%(reset)s] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(blue)s%(name)s%(reset)s][%(log_color)s%(levelname)s%(reset)s]
          - %(message)s'
        log_colors:
          DEBUG: purple
          INFO: green
          WARNING: yellow
          ERROR: red
          CRITICAL: red
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - model.optimizer.lr=0.001
    - model.optimizer.weight_decay=0
    - model.net.d_model=128
    - model.net.dim_feedforward=256
    - model.net.mlp_dim=128
    - model.net.nhead=2
    - model.net.nlayers=2
    - model.net.dropout=0.4
    - experiment=GunPointAgeSpan.yaml
    - logger=tensorboard
    - hparams_search=optuna.yaml
  job:
    name: train
    chdir: null
    override_dirname: experiment=GunPointAgeSpan.yaml,hparams_search=optuna.yaml,logger=tensorboard,model.net.d_model=128,model.net.dim_feedforward=256,model.net.dropout=0.4,model.net.mlp_dim=128,model.net.nhead=2,model.net.nlayers=2,model.optimizer.lr=0.001,model.optimizer.weight_decay=0
    id: '1'
    num: 1
    config_name: train_petastorm.yaml
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /Users/rishabh/TimeSeries-Interpretability-Robustness
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /Users/rishabh/TimeSeries-Interpretability-Robustness/configs
      schema: file
      provider: main
    - path: hydra_plugins.hydra_colorlog.conf
      schema: pkg
      provider: hydra-colorlog
    - path: ''
      schema: structured
      provider: schema
    output_dir: /Users/rishabh/TimeSeries-Interpretability-Robustness/logs/train/multiruns/2024-07-11_23-53-01/1
    choices:
      debug: null
      local: default.yaml
      hparams_search: optuna.yaml
      experiment: GunPointAgeSpan.yaml
      hydra: default.yaml
      extras: default.yaml
      paths: default.yaml
      trainer: default.yaml
      logger: tensorboard
      callbacks: default.yaml
      model: transformer.yaml
      datamodule: ts_datamodule.yaml
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: colorlog
      hydra/hydra_logging: colorlog
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: optuna
      hydra/sweeper/sampler: tpe
      hydra/launcher: basic
      hydra/output: default
  verbose: false
